@model IEnumerable<AdministratorWeb.Models.Payment>
@using AdministratorWeb.Models.DTOs
@{
    ViewData["Title"] = "All Payments";
    var filterData = (PaymentsFilterDto)ViewData["PaymentsFilterData"]!;
}

<div class="mb-8">
    <h1 class="text-2xl font-bold text-white">All Payments</h1>
    <p class="text-gray-400">Complete payment transaction history</p>
</div>

<!-- Filters -->
<div class="bg-gray-800 shadow rounded-lg border border-gray-700 mb-6">
    <div class="px-4 py-5 sm:p-6">
        <form id="filterForm" method="get">
            <!-- Quick Date Presets -->
            <div class="mb-4 flex gap-2 flex-wrap">
                <span class="text-sm font-medium text-gray-300 mr-2">Quick Filters:</span>
                <button type="button" onclick="setDateRange('today')" class="px-3 py-1 bg-gray-700 hover:bg-gray-600 text-white text-xs rounded-md transition">
                    Today
                </button>
                <button type="button" onclick="setDateRange('week')" class="px-3 py-1 bg-gray-700 hover:bg-gray-600 text-white text-xs rounded-md transition">
                    This Week
                </button>
                <button type="button" onclick="setDateRange('month')" class="px-3 py-1 bg-gray-700 hover:bg-gray-600 text-white text-xs rounded-md transition">
                    This Month
                </button>
                <button type="button" onclick="setDateRange('30days')" class="px-3 py-1 bg-gray-700 hover:bg-gray-600 text-white text-xs rounded-md transition">
                    Last 30 Days
                </button>
                <button type="button" onclick="clearFilters()" class="px-3 py-1 bg-red-700 hover:bg-red-600 text-white text-xs rounded-md transition">
                    Clear All
                </button>
            </div>

            <!-- Filter Fields Row 1 -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-4">
                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-1">Customer Search</label>
                    <input name="customerSearch" type="text" value="@filterData.CustomerSearch" placeholder="Name or ID..." class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white text-sm focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-1">Status</label>
                    <select name="status" class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <option value="">All Statuses</option>
                        @foreach (var status in filterData.PaymentStatuses)
                        {
                            <option value="@status" selected="@(filterData.StatusFilter == status)">@status</option>
                        }
                    </select>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-1">Min Amount (₱)</label>
                    <input name="minAmount" type="number" step="0.01" value="@filterData.MinAmount" placeholder="0.00" class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white text-sm focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-1">Max Amount (₱)</label>
                    <input name="maxAmount" type="number" step="0.01" value="@filterData.MaxAmount" placeholder="9999.99" class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white text-sm focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>
            </div>

            <!-- Filter Fields Row 2 -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-1">From Date</label>
                    <input id="fromDate" name="from" type="date" value="@filterData.FromFilter" class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white text-sm focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-1">To Date</label>
                    <input id="toDate" name="to" type="date" value="@filterData.ToFilter" class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white text-sm focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>
                <div class="md:col-span-2 flex items-end gap-2">
                    <button type="submit" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition">
                        Apply Filters
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    function setDateRange(preset) {
        const today = new Date();
        const fromDate = document.getElementById('fromDate');
        const toDate = document.getElementById('toDate');

        toDate.value = today.toISOString().split('T')[0];

        switch(preset) {
            case 'today':
                fromDate.value = today.toISOString().split('T')[0];
                break;
            case 'week':
                const weekAgo = new Date(today);
                weekAgo.setDate(today.getDate() - 7);
                fromDate.value = weekAgo.toISOString().split('T')[0];
                break;
            case 'month':
                const monthStart = new Date(today.getFullYear(), today.getMonth(), 1);
                fromDate.value = monthStart.toISOString().split('T')[0];
                break;
            case '30days':
                const thirtyDaysAgo = new Date(today);
                thirtyDaysAgo.setDate(today.getDate() - 30);
                fromDate.value = thirtyDaysAgo.toISOString().split('T')[0];
                break;
        }

        document.getElementById('filterForm').submit();
    }

    function clearFilters() {
        window.location.href = '@Url.Action("Payments", "Accounting")';
    }
</script>

<!-- Payments Table -->
<div class="bg-gray-800 shadow overflow-hidden sm:rounded-lg border border-gray-700">
    <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-700">
            <thead class="bg-gray-700">
                <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Customer</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Transaction</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Amount</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Method</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Status</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Date</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Actions</th>
                </tr>
            </thead>
            <tbody class="bg-gray-800 divide-y divide-gray-700">
                @foreach (var payment in Model)
                {
                    <tr class="hover:bg-gray-700">
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm font-medium text-white">@payment.CustomerName</div>
                            <div class="text-sm text-gray-400">ID: @payment.CustomerId</div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm font-medium text-white">@payment.TransactionId</div>
                            <div class="text-sm text-gray-400">Request #@payment.LaundryRequestId</div>
                            @if (!string.IsNullOrEmpty(payment.PaymentReference))
                            {
                                <div class="text-xs text-gray-500">Ref: @payment.PaymentReference</div>
                            }
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-white">
                            ₱@payment.Amount.ToString("N2")
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-300">
                            @payment.Method
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                                @(payment.Status == AdministratorWeb.Models.PaymentStatus.Completed ? "bg-green-900 text-green-200 border border-green-700" :
                                  payment.Status == AdministratorWeb.Models.PaymentStatus.Pending ? "bg-yellow-900 text-yellow-200 border border-yellow-700" :
                                  payment.Status == AdministratorWeb.Models.PaymentStatus.Failed ? "bg-red-900 text-red-200 border border-red-700" :
                                  "bg-gray-700 text-gray-300 border border-gray-600")">
                                @payment.Status
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-400">
                            <div>@payment.CreatedAt.ToString("MMM dd, yyyy")</div>
                            <div class="text-xs">@payment.CreatedAt.ToString("HH:mm")</div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                            <a asp-action="CustomerProfile" asp-route-customerId="@payment.CustomerId" class="text-blue-400 hover:text-blue-300">
                                View Profile
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@if (!Model.Any())
{
    <div class="text-center py-12">
        <i data-lucide="credit-card" class="mx-auto h-12 w-12 text-gray-600"></i>
        <h3 class="mt-2 text-sm font-medium text-white">No payments found</h3>
        <p class="mt-1 text-sm text-gray-400">No payments match your current filters.</p>
    </div>
}