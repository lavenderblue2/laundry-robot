@model IEnumerable<AdministratorWeb.Models.Payment>
@using AdministratorWeb.Models.DTOs
@{
    ViewData["Title"] = "All Payments";
    var filterData = (PaymentsFilterDto)ViewData["PaymentsFilterData"]!;
    var receipts = (Dictionary<int, AdministratorWeb.Models.Receipt>)ViewData["Receipts"]!;
}

<div class="mb-8">
    <h1 class="text-2xl font-bold text-white">All Payments</h1>
    <p class="text-gray-400">Complete payment transaction history</p>
</div>

<!-- Filters -->
<div class="bg-gray-800 shadow rounded-lg border border-gray-700 mb-6">
    <div class="px-4 py-5 sm:p-6">
        <form id="filterForm" method="get">
            <!-- Quick Date Presets -->
            <div class="mb-4 flex gap-2 flex-wrap">
                <span class="text-sm font-medium text-gray-300 mr-2">Quick Filters:</span>
                <button type="button" onclick="setDateRange('today')" class="px-3 py-1 bg-gray-700 hover:bg-gray-600 text-white text-xs rounded-md transition">
                    Today
                </button>
                <button type="button" onclick="setDateRange('week')" class="px-3 py-1 bg-gray-700 hover:bg-gray-600 text-white text-xs rounded-md transition">
                    This Week
                </button>
                <button type="button" onclick="setDateRange('month')" class="px-3 py-1 bg-gray-700 hover:bg-gray-600 text-white text-xs rounded-md transition">
                    This Month
                </button>
                <button type="button" onclick="setDateRange('30days')" class="px-3 py-1 bg-gray-700 hover:bg-gray-600 text-white text-xs rounded-md transition">
                    Last 30 Days
                </button>
                <button type="button" onclick="clearFilters()" class="px-3 py-1 bg-red-700 hover:bg-red-600 text-white text-xs rounded-md transition">
                    Clear All
                </button>
            </div>

            <!-- Filter Fields Row 1 -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-4">
                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-1">Customer Search</label>
                    <input name="customerSearch" type="text" value="@filterData.CustomerSearch" placeholder="Name or ID..." class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white text-sm focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-1">Status</label>
                    <select name="status" class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <option value="">All Statuses</option>
                        @foreach (var status in filterData.PaymentStatuses)
                        {
                            <option value="@status" selected="@(filterData.StatusFilter == status)">@status</option>
                        }
                    </select>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-1">Min Amount (₱)</label>
                    <input name="minAmount" type="number" step="0.01" value="@filterData.MinAmount" placeholder="0.00" class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white text-sm focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-1">Max Amount (₱)</label>
                    <input name="maxAmount" type="number" step="0.01" value="@filterData.MaxAmount" placeholder="9999.99" class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white text-sm focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>
            </div>

            <!-- Filter Fields Row 2 -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-1">From Date</label>
                    <input id="fromDate" name="from" type="date" value="@filterData.FromFilter" class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white text-sm focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-1">To Date</label>
                    <input id="toDate" name="to" type="date" value="@filterData.ToFilter" class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white text-sm focus:outline-none focus:ring-2 focus:ring-blue-500" />
                </div>
                <div class="md:col-span-2 flex items-end gap-2">
                    <button type="submit" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition">
                        Apply Filters
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    function setDateRange(preset) {
        const today = new Date();
        const fromDate = document.getElementById('fromDate');
        const toDate = document.getElementById('toDate');

        toDate.value = today.toISOString().split('T')[0];

        switch(preset) {
            case 'today':
                fromDate.value = today.toISOString().split('T')[0];
                break;
            case 'week':
                const weekAgo = new Date(today);
                weekAgo.setDate(today.getDate() - 7);
                fromDate.value = weekAgo.toISOString().split('T')[0];
                break;
            case 'month':
                const monthStart = new Date(today.getFullYear(), today.getMonth(), 1);
                fromDate.value = monthStart.toISOString().split('T')[0];
                break;
            case '30days':
                const thirtyDaysAgo = new Date(today);
                thirtyDaysAgo.setDate(today.getDate() - 30);
                fromDate.value = thirtyDaysAgo.toISOString().split('T')[0];
                break;
        }

        document.getElementById('filterForm').submit();
    }

    function clearFilters() {
        window.location.href = '@Url.Action("Payments", "Accounting")';
    }
</script>

<!-- Payments Table -->
<div class="bg-gray-800 shadow overflow-hidden sm:rounded-lg border border-gray-700">
    <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-700">
            <thead class="bg-gray-700">
                <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Customer</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Transaction</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Amount</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Method</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Status</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Date</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Actions</th>
                </tr>
            </thead>
            <tbody class="bg-gray-800 divide-y divide-gray-700">
                @foreach (var payment in Model)
                {
                    <tr class="hover:bg-gray-700">
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm font-medium text-white">@payment.CustomerName</div>
                            <div class="text-sm text-gray-400">ID: @payment.CustomerId</div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm font-medium text-white">@payment.TransactionId</div>
                            <div class="text-sm text-gray-400">Request #@payment.LaundryRequestId</div>
                            @if (!string.IsNullOrEmpty(payment.PaymentReference))
                            {
                                <div class="text-xs text-gray-500">Ref: @payment.PaymentReference</div>
                            }
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-white">
                            ₱@payment.Amount.ToString("N2")
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-300">
                            @payment.Method
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                                @(payment.Status == AdministratorWeb.Models.PaymentStatus.Completed ? "bg-green-900 text-green-200 border border-green-700" :
                                  payment.Status == AdministratorWeb.Models.PaymentStatus.Pending ? "bg-yellow-900 text-yellow-200 border border-yellow-700" :
                                  payment.Status == AdministratorWeb.Models.PaymentStatus.Failed ? "bg-red-900 text-red-200 border border-red-700" :
                                  "bg-gray-700 text-gray-300 border border-gray-600")">
                                @payment.Status
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-400">
                            <div>@payment.CreatedAt.ToString("MMM dd, yyyy")</div>
                            <div class="text-xs">@payment.CreatedAt.ToString("HH:mm")</div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                            <div class="flex flex-col gap-1">
                                @if (payment.Status == AdministratorWeb.Models.PaymentStatus.Completed || payment.Status == AdministratorWeb.Models.PaymentStatus.Refunded)
                                {
                                    @if (receipts.ContainsKey(payment.Id))
                                    {
                                        var receipt = receipts[payment.Id];
                                        <div class="flex gap-2 items-center">
                                            <a asp-action="ViewReceipt" asp-route-id="@receipt.Id" target="_blank" class="text-blue-400 hover:text-blue-300 font-semibold">
                                                📄 Receipt #@receipt.ReceiptNumber
                                            </a>
                                            @if (receipt.SentToCustomer)
                                            {
                                                <span class="text-xs text-green-400" title="Sent @receipt.SentAt?.ToString("MMM dd, hh:mm tt")">✓ Sent</span>
                                            }
                                        </div>
                                        <form asp-action="ResendReceipt" asp-route-receiptId="@receipt.Id" method="post" style="display: inline;">
                                            <button type="submit" class="text-gray-400 hover:text-gray-300 text-xs">
                                                Resend to Customer
                                            </button>
                                        </form>
                                    }
                                    else
                                    {
                                        <span class="text-yellow-400 text-xs">⚠️ No receipt</span>
                                    }
                                }
                                <div class="flex gap-2 flex-wrap mt-1">
                                    @if (payment.Status == AdministratorWeb.Models.PaymentStatus.Completed)
                                    {
                                        <button onclick="openRefundModal(@payment.Id, '@payment.CustomerName', @payment.Amount, '@payment.TransactionId')" class="text-orange-400 hover:text-orange-300 text-xs">
                                            Issue Refund
                                        </button>
                                    }
                                    else if (payment.Status == AdministratorWeb.Models.PaymentStatus.Pending)
                                    {
                                        <button onclick="openConfirmPaymentModal(@payment.Id, '@payment.CustomerName', @payment.Amount)" class="text-green-400 hover:text-green-300 text-xs">
                                            Confirm
                                        </button>
                                        <button onclick="openFailedModal(@payment.Id)" class="text-red-400 hover:text-red-300 text-xs">
                                            Failed
                                        </button>
                                        <button onclick="openCancelModal(@payment.Id, 'Pending')" class="text-gray-400 hover:text-gray-300 text-xs">
                                            Cancel
                                        </button>
                                    }
                                    else if (payment.Status == AdministratorWeb.Models.PaymentStatus.Failed)
                                    {
                                        <button onclick="openCancelModal(@payment.Id, 'Failed')" class="text-gray-400 hover:text-gray-300 text-xs">
                                            Cancel
                                        </button>
                                    }
                                    <a asp-action="CustomerProfile" asp-route-customerId="@payment.CustomerId" class="text-blue-400 hover:text-blue-300 text-xs">
                                        Profile
                                    </a>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@if (!Model.Any())
{
    <div class="text-center py-12">
        <i data-lucide="credit-card" class="mx-auto h-12 w-12 text-gray-600"></i>
        <h3 class="mt-2 text-sm font-medium text-white">No payments found</h3>
        <p class="mt-1 text-sm text-gray-400">No payments match your current filters.</p>
    </div>
}

<!-- Refund Modal -->
<div id="refundModal" class="fixed inset-0 bg-gray-900 bg-opacity-75 overflow-y-auto h-full w-full hidden">
    <div class="relative top-20 mx-auto p-5 border border-gray-600 w-96 shadow-lg rounded-md bg-gray-800">
        <div class="mt-3">
            <h3 class="text-lg font-medium text-white mb-4">Issue Refund</h3>
            <form id="refundForm" asp-action="IssueRefund" method="post">
                <input type="hidden" id="refundPaymentId" name="paymentId" />
                <div class="mb-4">
                    <label class="block text-gray-300 text-sm font-bold mb-2">Customer:</label>
                    <div id="refundCustomerName" class="text-white bg-gray-700 px-3 py-2 rounded"></div>
                </div>
                <div class="mb-4">
                    <label class="block text-gray-300 text-sm font-bold mb-2">Original Amount:</label>
                    <div id="refundOriginalAmount" class="text-white bg-gray-700 px-3 py-2 rounded font-semibold"></div>
                </div>
                <div class="mb-4">
                    <label class="block text-gray-300 text-sm font-bold mb-2">Transaction ID:</label>
                    <div id="refundTransactionId" class="text-white bg-gray-700 px-3 py-2 rounded text-sm"></div>
                </div>
                <div class="mb-4">
                    <label class="block text-gray-300 text-sm font-bold mb-2">Refund Amount (₱):</label>
                    <input type="number" id="refundAmount" name="refundAmount" step="0.01" required class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white focus:outline-none focus:ring-2 focus:ring-orange-500" />
                </div>
                <div class="mb-4">
                    <label class="block text-gray-300 text-sm font-bold mb-2">Refund Reason:</label>
                    <select name="refundReason" required class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white focus:outline-none focus:ring-2 focus:ring-orange-500">
                        <option value="">Select reason...</option>
                        <option value="Service Issue">Service Issue</option>
                        <option value="Customer Request">Customer Request</option>
                        <option value="Damage/Loss">Damage/Loss</option>
                        <option value="Overcharge">Overcharge</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div class="mb-4">
                    <label class="block text-gray-300 text-sm font-bold mb-2">Notes (Optional):</label>
                    <textarea name="notes" rows="2" class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white focus:outline-none focus:ring-2 focus:ring-orange-500" placeholder="Additional details..."></textarea>
                </div>
                <div class="flex justify-end space-x-2">
                    <button type="button" onclick="closeRefundModal()" class="bg-gray-600 hover:bg-gray-500 text-white font-bold py-2 px-4 rounded">
                        Cancel
                    </button>
                    <button type="submit" class="bg-orange-600 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded">
                        Issue Refund
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Confirm Payment Modal -->
<div id="confirmPaymentModal" class="fixed inset-0 bg-gray-900 bg-opacity-75 overflow-y-auto h-full w-full hidden">
    <div class="relative top-20 mx-auto p-5 border border-gray-600 w-96 shadow-lg rounded-md bg-gray-800">
        <div class="mt-3">
            <h3 class="text-lg font-medium text-white mb-4">Confirm Payment</h3>
            <form id="confirmPaymentForm" asp-action="ConfirmPayment" method="post">
                <input type="hidden" id="confirmPaymentId" name="paymentId" />
                <div class="mb-4">
                    <label class="block text-gray-300 text-sm font-bold mb-2">Customer:</label>
                    <div id="confirmCustomerName" class="text-white bg-gray-700 px-3 py-2 rounded"></div>
                </div>
                <div class="mb-4">
                    <label class="block text-gray-300 text-sm font-bold mb-2">Amount:</label>
                    <div id="confirmAmount" class="text-white bg-gray-700 px-3 py-2 rounded font-semibold"></div>
                </div>
                <div class="mb-4">
                    <label class="block text-gray-300 text-sm font-bold mb-2">Confirmation Notes (Optional):</label>
                    <textarea name="notes" rows="2" class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white focus:outline-none focus:ring-2 focus:ring-green-500" placeholder="Payment received via..."></textarea>
                </div>
                <div class="flex justify-end space-x-2">
                    <button type="button" onclick="closeConfirmPaymentModal()" class="bg-gray-600 hover:bg-gray-500 text-white font-bold py-2 px-4 rounded">
                        Cancel
                    </button>
                    <button type="submit" class="bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded">
                        Confirm Payment
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Failed Modal -->
<div id="failedModal" class="fixed inset-0 bg-gray-900 bg-opacity-75 overflow-y-auto h-full w-full hidden">
    <div class="relative top-20 mx-auto p-5 border border-gray-600 w-96 shadow-lg rounded-md bg-gray-800">
        <div class="mt-3">
            <h3 class="text-lg font-medium text-white mb-4">Mark Payment as Failed</h3>
            <form id="failedForm" asp-action="MarkAsFailed" method="post">
                <input type="hidden" id="failedPaymentId" name="paymentId" />
                <div class="mb-4">
                    <label class="block text-gray-300 text-sm font-bold mb-2">Failure Reason:</label>
                    <select name="failureReason" required class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white focus:outline-none focus:ring-2 focus:ring-red-500">
                        <option value="">Select reason...</option>
                        <option value="Card Declined">Card Declined</option>
                        <option value="Insufficient Funds">Insufficient Funds</option>
                        <option value="Gateway Error">Payment Gateway Error</option>
                        <option value="Timeout">Payment Timeout</option>
                        <option value="Customer Cancelled">Customer Cancelled</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div class="mb-4">
                    <label class="block text-gray-300 text-sm font-bold mb-2">Notes (Optional):</label>
                    <textarea name="notes" rows="2" class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white focus:outline-none focus:ring-2 focus:ring-red-500" placeholder="Additional details..."></textarea>
                </div>
                <div class="flex justify-end space-x-2">
                    <button type="button" onclick="closeFailedModal()" class="bg-gray-600 hover:bg-gray-500 text-white font-bold py-2 px-4 rounded">
                        Cancel
                    </button>
                    <button type="submit" class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">
                        Mark as Failed
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Cancel Modal -->
<div id="cancelModal" class="fixed inset-0 bg-gray-900 bg-opacity-75 overflow-y-auto h-full w-full hidden">
    <div class="relative top-20 mx-auto p-5 border border-gray-600 w-96 shadow-lg rounded-md bg-gray-800">
        <div class="mt-3">
            <h3 class="text-lg font-medium text-white mb-4">Cancel Payment</h3>
            <form id="cancelForm" asp-action="CancelPayment" method="post">
                <input type="hidden" id="cancelPaymentId" name="paymentId" />
                <div class="mb-4">
                    <label class="block text-gray-300 text-sm font-bold mb-2">Cancellation Reason:</label>
                    <select name="cancellationReason" required class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white focus:outline-none focus:ring-2 focus:ring-gray-500">
                        <option value="">Select reason...</option>
                        <option value="Customer Request">Customer Request</option>
                        <option value="Order Cancelled">Order Cancelled</option>
                        <option value="Duplicate Payment">Duplicate Payment</option>
                        <option value="Timeout">Payment Timeout</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div class="mb-4">
                    <label class="block text-gray-300 text-sm font-bold mb-2">Notes (Optional):</label>
                    <textarea name="notes" rows="2" class="bg-gray-700 border border-gray-600 rounded w-full py-2 px-3 text-white focus:outline-none focus:ring-2 focus:ring-gray-500" placeholder="Additional details..."></textarea>
                </div>
                <div class="flex justify-end space-x-2">
                    <button type="button" onclick="closeCancelModal()" class="bg-gray-600 hover:bg-gray-500 text-white font-bold py-2 px-4 rounded">
                        Back
                    </button>
                    <button type="submit" class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">
                        Cancel Payment
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // Refund Modal
    function openRefundModal(paymentId, customerName, amount, transactionId) {
        document.getElementById('refundPaymentId').value = paymentId;
        document.getElementById('refundCustomerName').textContent = customerName;
        document.getElementById('refundOriginalAmount').textContent = '₱' + parseFloat(amount).toFixed(2);
        document.getElementById('refundTransactionId').textContent = transactionId;
        document.getElementById('refundAmount').value = parseFloat(amount).toFixed(2);
        document.getElementById('refundModal').classList.remove('hidden');
    }

    function closeRefundModal() {
        document.getElementById('refundModal').classList.add('hidden');
    }

    // Confirm Payment Modal
    function openConfirmPaymentModal(paymentId, customerName, amount) {
        document.getElementById('confirmPaymentId').value = paymentId;
        document.getElementById('confirmCustomerName').textContent = customerName;
        document.getElementById('confirmAmount').textContent = '₱' + parseFloat(amount).toFixed(2);
        document.getElementById('confirmPaymentModal').classList.remove('hidden');
    }

    function closeConfirmPaymentModal() {
        document.getElementById('confirmPaymentModal').classList.add('hidden');
    }

    // Failed Modal
    function openFailedModal(paymentId) {
        document.getElementById('failedPaymentId').value = paymentId;
        document.getElementById('failedModal').classList.remove('hidden');
    }

    function closeFailedModal() {
        document.getElementById('failedModal').classList.add('hidden');
    }

    // Cancel Modal
    function openCancelModal(paymentId, status) {
        document.getElementById('cancelPaymentId').value = paymentId;
        document.getElementById('cancelModal').classList.remove('hidden');
    }

    function closeCancelModal() {
        document.getElementById('cancelModal').classList.add('hidden');
    }
</script>