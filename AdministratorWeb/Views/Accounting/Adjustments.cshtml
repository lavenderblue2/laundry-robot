@model IEnumerable<AdministratorWeb.Models.PaymentAdjustment>
@{
    ViewData["Title"] = "Payment Adjustments";
}

<!-- Dashboard Header -->
<div class="mb-8 animate-slide-up">
    <div class="flex items-center justify-between">
        <div>
            <h1 class="text-3xl font-bold text-white mb-2">Payment Adjustments</h1>
            <p class="text-slate-400 flex items-center">
                <i data-lucide="edit-3" class="w-4 h-4 mr-2"></i>
                Manually adjust accounting totals for corrections
            </p>
        </div>
        <div class="flex items-center space-x-3">
            <a asp-action="Index" class="inline-flex items-center px-4 py-2 bg-slate-700/50 hover:bg-slate-600/50 text-white text-sm font-medium rounded-xl transition-all duration-200">
                <i data-lucide="arrow-left" class="w-4 h-4 mr-2"></i>
                Back to Dashboard
            </a>
            <button onclick="openAdjustmentModal()" class="inline-flex items-center px-4 py-2 bg-brand-600 hover:bg-brand-700 text-white text-sm font-medium rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl">
                <i data-lucide="plus" class="w-4 h-4 mr-2"></i>
                New Adjustment
            </button>
        </div>
    </div>
</div>

<!-- Success/Error Messages -->
@if (TempData["Success"] != null)
{
    <div class="mb-6 animate-slide-down">
        <div class="bg-emerald-900/50 border border-emerald-700/50 text-emerald-200 px-4 py-3 rounded-xl backdrop-blur-sm" role="alert">
            <div class="flex items-center">
                <i data-lucide="check-circle" class="w-5 h-5 mr-2 text-emerald-400"></i>
                <span>@TempData["Success"]</span>
            </div>
        </div>
    </div>
}
@if (TempData["Error"] != null)
{
    <div class="mb-6 animate-slide-down">
        <div class="bg-red-900/50 border border-red-700/50 text-red-200 px-4 py-3 rounded-xl backdrop-blur-sm" role="alert">
            <div class="flex items-center">
                <i data-lucide="x-circle" class="w-5 h-5 mr-2 text-red-400"></i>
                <span>@TempData["Error"]</span>
            </div>
        </div>
    </div>
}

<!-- Adjustments List -->
<div class="bg-slate-800/50 backdrop-blur-xl shadow-xl overflow-hidden rounded-2xl border border-slate-700/50 animate-slide-up" style="animation-delay: 0.1s;">
    <div class="px-6 py-6 border-b border-slate-700/50">
        <h3 class="text-xl font-bold text-white flex items-center">
            <i data-lucide="list" class="w-5 h-5 mr-2 text-brand-400"></i>
            All Adjustments
        </h3>
    </div>

    <div class="divide-y divide-slate-700/30">
        @if (Model.Any())
        {
            @foreach (var adjustment in Model)
            {
                <div class="px-6 py-4 hover:bg-slate-700/20 transition-colors duration-200 group">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-4 flex-1">
                            <div class="flex-shrink-0">
                                <div class="h-12 w-12 rounded-xl @(adjustment.Type == AdministratorWeb.Models.AdjustmentType.AddRevenue ? "bg-emerald-500/20" : "bg-red-500/20") flex items-center justify-center">
                                    <i data-lucide="@(adjustment.Type == AdministratorWeb.Models.AdjustmentType.AddRevenue ? "plus" : "minus")" class="h-5 w-5 @(adjustment.Type == AdministratorWeb.Models.AdjustmentType.AddRevenue ? "text-emerald-400" : "text-red-400")"></i>
                                </div>
                            </div>
                            <div class="min-w-0 flex-1">
                                <div class="flex items-center space-x-3">
                                    <div class="text-sm font-semibold text-white">@adjustment.Description</div>
                                    <div class="text-sm font-medium @(adjustment.Type == AdministratorWeb.Models.AdjustmentType.AddRevenue ? "text-emerald-400" : "text-red-400")">
                                        @(adjustment.Type == AdministratorWeb.Models.AdjustmentType.AddRevenue ? "+" : "-")â‚±@adjustment.Amount.ToString("N2")
                                    </div>
                                </div>
                                <div class="flex items-center mt-1 space-x-4">
                                    <span class="text-xs px-2 py-1 rounded-lg @(
                                        adjustment.Type == AdministratorWeb.Models.AdjustmentType.AddRevenue ? "bg-emerald-900/50 text-emerald-300 border border-emerald-700/50" :
                                        adjustment.Type == AdministratorWeb.Models.AdjustmentType.SubtractRevenue ? "bg-red-900/50 text-red-300 border border-red-700/50" :
                                        adjustment.Type == AdministratorWeb.Models.AdjustmentType.Refund ? "bg-yellow-900/50 text-yellow-300 border border-yellow-700/50" :
                                        "bg-slate-700 text-slate-300 border border-slate-600")">
                                        @adjustment.Type.ToString().Replace("AddRevenue", "Add Revenue").Replace("SubtractRevenue", "Subtract Revenue")
                                    </span>
                                    @if (!string.IsNullOrEmpty(adjustment.ReferenceNumber))
                                    {
                                        <div class="text-sm text-slate-400">Ref: @adjustment.ReferenceNumber</div>
                                    }
                                    <div class="text-sm text-slate-500">@adjustment.EffectiveDate.ToString("MMM dd, yyyy")</div>
                                    <div class="text-sm text-slate-500">by @adjustment.CreatedByUserName</div>
                                </div>
                                @if (!string.IsNullOrEmpty(adjustment.Notes))
                                {
                                    <div class="text-sm text-slate-400 mt-1">
                                        <i data-lucide="sticky-note" class="w-3 h-3 inline mr-1"></i>
                                        @adjustment.Notes
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="flex items-center space-x-3">
                            <form asp-action="DeleteAdjustment" method="post" onsubmit="return confirm('Are you sure you want to delete this adjustment?');" class="opacity-0 group-hover:opacity-100 transition-opacity">
                                <input type="hidden" name="id" value="@adjustment.Id" />
                                <button type="submit" class="text-red-400 hover:text-red-300 text-sm font-medium transition-colors">
                                    <i data-lucide="trash-2" class="w-4 h-4"></i>
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="px-6 py-12 text-center">
                <div class="w-16 h-16 bg-slate-700/50 rounded-2xl flex items-center justify-center mx-auto mb-4">
                    <i data-lucide="edit-3" class="h-8 w-8 text-slate-500"></i>
                </div>
                <h3 class="text-lg font-medium text-white mb-2">No Adjustments Yet</h3>
                <p class="text-sm text-slate-400 mb-6">Create an adjustment to manually correct accounting totals.</p>
                <button onclick="openAdjustmentModal()" class="inline-flex items-center px-4 py-2 bg-brand-600 hover:bg-brand-700 text-white text-sm font-medium rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl">
                    <i data-lucide="plus" class="w-4 h-4 mr-2"></i>
                    Create First Adjustment
                </button>
            </div>
        }
    </div>
</div>

<!-- Create Adjustment Modal -->
<div id="adjustmentModal" class="hidden fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4">
    <div class="bg-slate-800 rounded-2xl border border-slate-700/50 shadow-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
        <div class="px-6 py-6 border-b border-slate-700/50">
            <div class="flex items-center justify-between">
                <h3 class="text-xl font-bold text-white flex items-center">
                    <i data-lucide="plus-circle" class="w-5 h-5 mr-2 text-brand-400"></i>
                    Create Adjustment
                </h3>
                <button onclick="closeAdjustmentModal()" class="text-slate-400 hover:text-white transition-colors">
                    <i data-lucide="x" class="w-6 h-6"></i>
                </button>
            </div>
        </div>

        <form asp-action="CreateAdjustment" method="post" class="p-6 space-y-6">
            <!-- Adjustment Type -->
            <div>
                <label class="block text-slate-300 text-sm font-semibold mb-3 flex items-center">
                    <i data-lucide="tag" class="w-4 h-4 mr-2 text-slate-400"></i>
                    Adjustment Type
                </label>
                <select name="Type" required class="w-full px-4 py-3 bg-slate-600/50 border border-slate-500/50 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-brand-500/50 focus:border-transparent transition-all duration-200">
                    <option value="0">Add Revenue</option>
                    <option value="1">Subtract Revenue</option>
                    <option value="2">Correction</option>
                    <option value="3">Refund</option>
                    <option value="4">Other</option>
                </select>
            </div>

            <!-- Amount -->
            <div>
                <label class="block text-slate-300 text-sm font-semibold mb-3 flex items-center">
                    <i data-lucide="peso-sign" class="w-4 h-4 mr-2 text-slate-400"></i>
                    Amount
                </label>
                <input type="number" name="Amount" step="0.01" min="0.01" required placeholder="0.00" class="w-full px-4 py-3 bg-slate-600/50 border border-slate-500/50 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-brand-500/50 focus:border-transparent transition-all duration-200" />
            </div>

            <!-- Description -->
            <div>
                <label class="block text-slate-300 text-sm font-semibold mb-3 flex items-center">
                    <i data-lucide="file-text" class="w-4 h-4 mr-2 text-slate-400"></i>
                    Description
                </label>
                <input type="text" name="Description" required maxlength="500" placeholder="Enter adjustment description..." class="w-full px-4 py-3 bg-slate-600/50 border border-slate-500/50 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-brand-500/50 focus:border-transparent transition-all duration-200" />
            </div>

            <!-- Reference Number -->
            <div>
                <label class="block text-slate-300 text-sm font-semibold mb-3 flex items-center">
                    <i data-lucide="hash" class="w-4 h-4 mr-2 text-slate-400"></i>
                    Reference Number (Optional)
                </label>
                <input type="text" name="ReferenceNumber" maxlength="100" placeholder="e.g., INV-2024-001" class="w-full px-4 py-3 bg-slate-600/50 border border-slate-500/50 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-brand-500/50 focus:border-transparent transition-all duration-200" />
            </div>

            <!-- Effective Date -->
            <div>
                <label class="block text-slate-300 text-sm font-semibold mb-3 flex items-center">
                    <i data-lucide="calendar" class="w-4 h-4 mr-2 text-slate-400"></i>
                    Effective Date
                </label>
                <input type="date" name="EffectiveDate" value="@DateTime.Today.ToString("yyyy-MM-dd")" required class="w-full px-4 py-3 bg-slate-600/50 border border-slate-500/50 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-brand-500/50 focus:border-transparent transition-all duration-200" />
            </div>

            <!-- Notes -->
            <div>
                <label class="block text-slate-300 text-sm font-semibold mb-3 flex items-center">
                    <i data-lucide="sticky-note" class="w-4 h-4 mr-2 text-slate-400"></i>
                    Notes (Optional)
                </label>
                <textarea name="Notes" rows="3" placeholder="Additional notes..." class="w-full px-4 py-3 bg-slate-600/50 border border-slate-500/50 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-brand-500/50 focus:border-transparent resize-none transition-all duration-200"></textarea>
            </div>

            <!-- Buttons -->
            <div class="flex items-center justify-end space-x-3 pt-6 border-t border-slate-700/50">
                <button type="button" onclick="closeAdjustmentModal()" class="px-6 py-3 bg-slate-700/50 hover:bg-slate-600/50 text-white font-medium rounded-xl transition-all duration-200">
                    Cancel
                </button>
                <button type="submit" class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-brand-600 to-indigo-600 hover:from-brand-700 hover:to-indigo-700 text-white font-semibold rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl">
                    <i data-lucide="save" class="w-4 h-4 mr-2"></i>
                    Create Adjustment
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        function openAdjustmentModal() {
            document.getElementById('adjustmentModal').classList.remove('hidden');
            lucide.createIcons();
        }

        function closeAdjustmentModal() {
            document.getElementById('adjustmentModal').classList.add('hidden');
        }

        // Close modal on outside click
        document.getElementById('adjustmentModal')?.addEventListener('click', function(e) {
            if (e.target === this) {
                closeAdjustmentModal();
            }
        });

        document.addEventListener('DOMContentLoaded', function() {
            lucide.createIcons();
        });
    </script>
}
