@model IEnumerable<dynamic>
@{
    ViewData["Title"] = "Select Customer";
}

<div class="animate-fade-in">
    <!-- Header -->
    <div class="mb-6">
        <a href="@Url.Action("Index")" class="inline-flex items-center gap-2 text-slate-400 hover:text-brand-400 transition-colors duration-200 mb-4">
            <i data-lucide="arrow-left" class="w-4 h-4"></i>
            <span class="text-sm font-medium">Back to Messages</span>
        </a>
        <h1 class="text-3xl font-bold text-white flex items-center gap-3">
            <i data-lucide="user-circle" class="w-8 h-8 text-brand-400"></i>
            Select User to Message
        </h1>
        <p class="text-slate-400 mt-1">Choose any user to send a message - they'll receive it when they log in</p>
    </div>

    <!-- Customers Card -->
    <div class="bg-slate-800/50 backdrop-blur-xl rounded-2xl border border-slate-700/50 shadow-xl overflow-hidden">
        <!-- Card Header -->
        <div class="bg-gradient-to-r from-brand-600 to-indigo-600 px-6 py-4">
            <div class="flex items-center gap-3">
                <i data-lucide="users" class="w-5 h-5 text-white"></i>
                <h2 class="text-lg font-semibold text-white">All Users</h2>
                <span class="ml-auto px-3 py-1 bg-white/20 backdrop-blur-sm rounded-full text-white text-sm font-medium">
                    @Model.Count() @(Model.Count() == 1 ? "user" : "users")
                </span>
            </div>
        </div>

        <!-- Card Body -->
        <div class="p-0">
            @if (!Model.Any())
            {
                <div class="flex flex-col items-center justify-center py-16 px-6">
                    <div class="w-20 h-20 bg-slate-700/30 rounded-full flex items-center justify-center mb-4">
                        <i data-lucide="users" class="w-10 h-10 text-slate-500"></i>
                    </div>
                    <h3 class="text-xl font-semibold text-slate-300 mb-2">No users found</h3>
                    <p class="text-slate-400 text-center max-w-md">
                        There are currently no users in the system.
                    </p>
                </div>
            }
            else
            {
                <!-- Search Bar -->
                <div class="p-6 border-b border-slate-700/50">
                    <div class="relative">
                        <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                            <i data-lucide="search" class="w-5 h-5 text-slate-400"></i>
                        </div>
                        <input type="text"
                               id="customerSearch"
                               placeholder="Search customers by name, email, or room..."
                               class="block w-full pl-10 pr-3 py-3 bg-slate-700/50 border border-slate-600/50 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-brand-500/50 focus:border-transparent transition-all duration-200">
                    </div>
                </div>

                <!-- Customers Table -->
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-slate-700/50">
                        <thead class="bg-slate-700/30">
                            <tr>
                                <th scope="col" class="px-6 py-4 text-left text-xs font-semibold text-slate-300 uppercase tracking-wider">
                                    User
                                </th>
                                <th scope="col" class="px-6 py-4 text-left text-xs font-semibold text-slate-300 uppercase tracking-wider">
                                    Contact
                                </th>
                                <th scope="col" class="px-6 py-4 text-left text-xs font-semibold text-slate-300 uppercase tracking-wider">
                                    Room
                                </th>
                                <th scope="col" class="px-6 py-4 text-right text-xs font-semibold text-slate-300 uppercase tracking-wider">
                                    Action
                                </th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-slate-700/50" id="customerTableBody">
                            @foreach (dynamic userItem in Model)
                            {
                                var user = userItem.User as AdministratorWeb.Models.ApplicationUser;

                                <tr class="customer-row hover:bg-slate-700/30 transition-colors duration-150"
                                    data-search="@user.FullName.ToLower() @(user.Email?.ToLower() ?? "") @(user.RoomName?.ToLower() ?? "")">
                                    <td class="px-6 py-4">
                                        <div class="flex items-center gap-3">
                                            <div class="relative">
                                                <div class="w-10 h-10 bg-gradient-to-br from-brand-500 to-indigo-600 rounded-full flex items-center justify-center shadow-lg flex-shrink-0 @(!user.IsActive ? "opacity-50" : "")">
                                                    <span class="text-white font-bold text-sm">
                                                        @user.FirstName.Substring(0, 1).ToUpper()
                                                    </span>
                                                </div>
                                                @if (!user.IsActive)
                                                {
                                                    <div class="absolute -bottom-1 -right-1 w-4 h-4 bg-red-500 rounded-full border-2 border-slate-800 flex items-center justify-center" title="Inactive user">
                                                        <i data-lucide="x" class="w-2 h-2 text-white"></i>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="absolute -bottom-1 -right-1 w-4 h-4 bg-emerald-500 rounded-full border-2 border-slate-800" title="Active user"></div>
                                                }
                                            </div>
                                            <div>
                                                <div class="flex items-center gap-2">
                                                    <span class="font-semibold text-white @(!user.IsActive ? "opacity-60" : "")">@user.FullName</span>
                                                    @if (!user.IsActive)
                                                    {
                                                        <span class="px-2 py-0.5 bg-red-500/20 text-red-400 text-xs font-medium rounded border border-red-500/30">
                                                            Inactive
                                                        </span>
                                                    }
                                                </div>
                                                <div class="flex items-center gap-2 mt-1">
                                                    <div class="text-xs text-slate-400 font-mono">
                                                        ID: @user.Id.Substring(0, 8)
                                                    </div>
                                                    @{
                                                        var roles = userItem.Roles as IList<string>;
                                                        if (roles != null && roles.Any())
                                                        {
                                                            foreach (var role in roles)
                                                            {
                                                                var badgeColor = role == "Administrator" ? "bg-purple-500/20 text-purple-300 border-purple-500/30" :
                                                                                role == "Customer" ? "bg-blue-500/20 text-blue-300 border-blue-500/30" :
                                                                                "bg-gray-500/20 text-gray-300 border-gray-500/30";
                                                                <span class="px-2 py-0.5 @badgeColor text-xs font-medium rounded border">
                                                                    @role
                                                                </span>
                                                            }
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4">
                                        <div class="space-y-1">
                                            <div class="flex items-center gap-2 text-sm text-slate-300">
                                                <i data-lucide="mail" class="w-4 h-4 text-slate-400"></i>
                                                <span>@(user.Email ?? "N/A")</span>
                                            </div>
                                            <div class="flex items-center gap-2 text-sm text-slate-300">
                                                <i data-lucide="phone" class="w-4 h-4 text-slate-400"></i>
                                                <span>@(user.PhoneNumber ?? "N/A")</span>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4">
                                        @if (!string.IsNullOrEmpty(user.RoomName))
                                        {
                                            <span class="inline-flex items-center gap-1.5 px-3 py-1 bg-brand-500/20 text-brand-300 text-sm font-medium rounded-lg border border-brand-500/30">
                                                <i data-lucide="door-open" class="w-4 h-4"></i>
                                                @user.RoomName
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-slate-500">—</span>
                                        }
                                    </td>
                                    <td class="px-6 py-4 text-right">
                                        <a href="@Url.Action("Conversation", new { customerId = user.Id })"
                                           class="inline-flex items-center gap-2 px-4 py-2 bg-brand-600 hover:bg-brand-700 text-white text-sm font-medium rounded-lg transition-all duration-200 shadow-lg hover:shadow-xl">
                                            <i data-lucide="message-circle" class="w-4 h-4"></i>
                                            Message
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Search functionality
        const searchInput = document.getElementById('customerSearch');
        const customerRows = document.querySelectorAll('.customer-row');

        if (searchInput) {
            searchInput.addEventListener('input', function(e) {
                const searchTerm = e.target.value.toLowerCase().trim();

                customerRows.forEach(row => {
                    const searchData = row.getAttribute('data-search');
                    if (searchData.includes(searchTerm)) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });

                // Show "no results" message if all rows are hidden
                const visibleRows = Array.from(customerRows).filter(row => row.style.display !== 'none');
                const tableBody = document.getElementById('customerTableBody');

                if (visibleRows.length === 0 && searchTerm) {
                    if (!document.getElementById('noResults')) {
                        const noResultsRow = document.createElement('tr');
                        noResultsRow.id = 'noResults';
                        noResultsRow.innerHTML = `
                            <td colspan="4" class="px-6 py-12 text-center">
                                <div class="flex flex-col items-center">
                                    <i data-lucide="search-x" class="w-12 h-12 text-slate-500 mb-3"></i>
                                    <p class="text-slate-400">No customers found matching "<span class="text-white font-medium">${searchTerm}</span>"</p>
                                </div>
                            </td>
                        `;
                        tableBody.appendChild(noResultsRow);
                        lucide.createIcons();
                    }
                } else {
                    const noResultsRow = document.getElementById('noResults');
                    if (noResultsRow) {
                        noResultsRow.remove();
                    }
                }
            });
        }

        // Initialize Lucide icons after DOM loads
        document.addEventListener('DOMContentLoaded', function() {
            lucide.createIcons();
        });
    </script>
}
