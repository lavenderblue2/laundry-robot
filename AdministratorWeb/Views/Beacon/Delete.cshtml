@model AdministratorWeb.Models.BluetoothBeacon
@{
    ViewData["Title"] = "Delete Beacon";
    var recentlyDetected = Model.LastSeenAt.HasValue && (DateTime.UtcNow - Model.LastSeenAt.Value).TotalHours <= 1;
}

<!-- Dashboard Header -->
<div class="mb-8 animate-slide-up">
    <div class="flex items-center justify-between">
        <div>
            <h1 class="text-3xl font-bold text-white mb-2">Delete Beacon</h1>
            <p class="text-slate-400 flex items-center">
                <i data-lucide="alert-triangle" class="w-4 h-4 mr-2 text-red-400"></i>
                Permanently remove this Bluetooth beacon from the system
            </p>
        </div>
        <div class="flex items-center space-x-3">
            <a asp-action="Details" asp-route-id="@Model.Id" class="inline-flex items-center px-4 py-2 bg-slate-700/50 hover:bg-slate-600/50 text-white text-sm font-medium rounded-xl transition-all duration-200">
                <i data-lucide="eye" class="w-4 h-4 mr-2"></i>
                View Details
            </a>
            <a asp-action="Index" class="inline-flex items-center px-4 py-2 bg-slate-700/50 hover:bg-slate-600/50 text-white text-sm font-medium rounded-xl transition-all duration-200">
                <i data-lucide="arrow-left" class="w-4 h-4 mr-2"></i>
                Back to Beacons
            </a>
        </div>
    </div>
</div>

<!-- Warning Card -->
<div class="max-w-4xl mx-auto mb-8 bg-red-900/20 backdrop-blur-xl border border-red-700/50 rounded-2xl p-6 animate-slide-up" style="animation-delay: 0.1s;">
    <div class="flex items-start">
        <div class="p-2 bg-red-500/20 rounded-xl mr-4 mt-1">
            <i data-lucide="alert-triangle" class="h-6 w-6 text-red-400"></i>
        </div>
        <div>
            <h3 class="text-lg font-bold text-red-300 mb-2">Warning: Permanent Deletion</h3>
            <div class="text-red-200 space-y-2">
                <p>This action cannot be undone. Deleting this beacon will:</p>
                <ul class="list-disc list-inside ml-4 space-y-1 text-sm">
                    <li>Remove the beacon configuration from all robots</li>
                    <li>Delete all detection history and statistics</li>
                    <li>Stop robots from tracking this beacon immediately</li>
                    <li>Remove it from navigation targets if applicable</li>
                </ul>
            </div>
        </div>
    </div>
</div>

<!-- Beacon Summary -->
<div class="max-w-4xl mx-auto bg-slate-800/50 backdrop-blur-xl shadow-xl rounded-2xl border border-slate-700/50 animate-slide-up" style="animation-delay: 0.2s;">
    <div class="px-6 py-6 border-b border-slate-700/50">
        <div class="flex items-center justify-between">
            <div class="flex items-center">
                <div class="p-3 bg-gradient-to-br from-brand-500/20 to-indigo-500/20 rounded-2xl mr-4">
                    <i data-lucide="radio" class="h-8 w-8 text-brand-400"></i>
                </div>
                <div>
                    <h2 class="text-2xl font-bold text-white">@Model.Name</h2>
                    <p class="text-slate-400 flex items-center mt-1">
                        <i data-lucide="home" class="w-4 h-4 mr-2"></i>
                        @Model.RoomName
                    </p>
                </div>
            </div>
            <div class="text-right">
                <div class="flex items-center space-x-3">
                    <span class="px-3 py-1 inline-flex items-center text-sm font-semibold rounded-lg @(Model.IsActive ? "bg-emerald-900/50 text-emerald-300 border border-emerald-700/50" : "bg-red-900/50 text-red-300 border border-red-700/50")">
                        <i data-lucide="@(Model.IsActive ? "check-circle" : "x-circle")" class="w-3 h-3 mr-1"></i>
                        @(Model.IsActive ? "Active" : "Inactive")
                    </span>
                    @if (recentlyDetected)
                    {
                        <span class="px-3 py-1 inline-flex items-center text-sm font-semibold rounded-lg bg-green-900/50 text-green-300 border border-green-700/50">
                            <i data-lucide="activity" class="w-3 h-3 mr-1"></i>
                            Live
                        </span>
                    }
                </div>
            </div>
        </div>
    </div>
    
    <div class="p-6">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            <!-- Basic Information -->
            <div class="bg-slate-700/30 rounded-xl p-4">
                <div class="text-sm text-slate-400 mb-3 flex items-center">
                    <i data-lucide="wifi" class="w-4 h-4 mr-2"></i>
                    MAC Address
                </div>
                <div class="text-white font-mono text-lg">@Model.MacAddress</div>
            </div>
            
            <div class="bg-slate-700/30 rounded-xl p-4">
                <div class="text-sm text-slate-400 mb-3 flex items-center">
                    <i data-lucide="signal" class="w-4 h-4 mr-2"></i>
                    RSSI Threshold
                </div>
                <div class="text-white text-lg">@Model.RssiThreshold dBm</div>
            </div>
            
            @if (Model.IsNavigationTarget)
            {
                <div class="bg-slate-700/30 rounded-xl p-4">
                    <div class="text-sm text-slate-400 mb-3 flex items-center">
                        <i data-lucide="navigation" class="w-4 h-4 mr-2"></i>
                        Navigation Priority
                    </div>
                    <div class="text-white text-lg">@Model.Priority</div>
                </div>
            }
            
            <!-- Detection Information -->
            @if (Model.LastSeenAt.HasValue)
            {
                <div class="bg-slate-700/30 rounded-xl p-4">
                    <div class="text-sm text-slate-400 mb-3 flex items-center">
                        <i data-lucide="clock" class="w-4 h-4 mr-2"></i>
                        Last Detection
                    </div>
                    <div class="text-white">@Model.LastSeenAt.Value.ToString("MMM dd, HH:mm")</div>
                    @if (!string.IsNullOrEmpty(Model.LastSeenByRobot))
                    {
                        <div class="text-xs text-slate-500 mt-1">by @Model.LastSeenByRobot</div>
                    }
                </div>
            }
            
            @if (Model.LastRecordedRssi.HasValue)
            {
                <div class="bg-slate-700/30 rounded-xl p-4">
                    <div class="text-sm text-slate-400 mb-3 flex items-center">
                        <i data-lucide="signal" class="w-4 h-4 mr-2"></i>
                        Last RSSI
                    </div>
                    <div class="text-white text-lg">@Model.LastRecordedRssi.Value dBm</div>
                </div>
            }
            
            <div class="bg-slate-700/30 rounded-xl p-4">
                <div class="text-sm text-slate-400 mb-3 flex items-center">
                    <i data-lucide="calendar" class="w-4 h-4 mr-2"></i>
                    Created
                </div>
                <div class="text-white">@Model.CreatedAt.ToString("MMM dd, yyyy")</div>
                @if (!string.IsNullOrEmpty(Model.CreatedBy))
                {
                    <div class="text-xs text-slate-500 mt-1">by @Model.CreatedBy</div>
                }
            </div>
        </div>
        
        @if (!string.IsNullOrEmpty(Model.Description))
        {
            <div class="mt-6 bg-slate-700/30 rounded-xl p-4">
                <div class="text-sm text-slate-400 mb-3 flex items-center">
                    <i data-lucide="message-square" class="w-4 h-4 mr-2"></i>
                    Description
                </div>
                <div class="text-white">@Model.Description</div>
            </div>
        }
    </div>
</div>

<!-- Confirmation Form -->
<div class="max-w-4xl mx-auto mt-8">
    <form asp-action="Delete" method="post" class="animate-slide-up" style="animation-delay: 0.3s;">
        <input type="hidden" asp-for="Id" />
        <div class="bg-slate-800/50 backdrop-blur-xl shadow-xl rounded-2xl border border-slate-700/50 p-8">
            <div class="text-center mb-8">
                <div class="w-16 h-16 bg-red-500/20 rounded-2xl flex items-center justify-center mx-auto mb-4">
                    <i data-lucide="trash-2" class="h-8 w-8 text-red-400"></i>
                </div>
                <h3 class="text-2xl font-bold text-white mb-2">Confirm Deletion</h3>
                <p class="text-slate-400">
                    Type the beacon name <strong class="text-white">@Model.Name</strong> to confirm deletion
                </p>
            </div>
            
            <div class="max-w-md mx-auto mb-8">
                <input type="text" id="confirmName" placeholder="Enter beacon name to confirm" 
                       class="w-full px-4 py-3 bg-slate-600/50 border border-slate-500/50 rounded-xl text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-red-500/50 focus:border-transparent transition-all duration-200" />
            </div>
            
            <div class="flex items-center justify-center space-x-4">
                <a asp-action="Index" class="inline-flex items-center px-8 py-4 bg-slate-600/50 hover:bg-slate-600 text-white font-medium rounded-xl transition-all duration-200">
                    <i data-lucide="x" class="w-4 h-4 mr-2"></i>
                    Cancel
                </a>
                <button type="submit" id="deleteButton" disabled 
                        class="inline-flex items-center px-8 py-4 bg-red-600/50 hover:bg-red-600 text-white font-semibold rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed">
                    <i data-lucide="trash-2" class="w-4 h-4 mr-2"></i>
                    Delete Beacon Permanently
                </button>
            </div>
        </div>
        
        @Html.AntiForgeryToken()
    </form>
</div>

<script>
    // Confirm beacon name before enabling delete button
    document.getElementById('confirmName').addEventListener('input', function(e) {
        const deleteButton = document.getElementById('deleteButton');
        const expectedName = '@Model.Name';
        
        if (e.target.value.trim() === expectedName) {
            deleteButton.disabled = false;
            deleteButton.classList.remove('bg-red-600/50', 'hover:bg-red-600');
            deleteButton.classList.add('bg-red-600', 'hover:bg-red-700');
        } else {
            deleteButton.disabled = true;
            deleteButton.classList.remove('bg-red-600', 'hover:bg-red-700');
            deleteButton.classList.add('bg-red-600/50', 'hover:bg-red-600');
        }
    });
    
    // Additional confirmation on form submit
    document.querySelector('form').addEventListener('submit', function(e) {
        const confirmName = document.getElementById('confirmName').value.trim();
        const expectedName = '@Model.Name';
        
        if (confirmName !== expectedName) {
            e.preventDefault();
            alert('Please enter the exact beacon name to confirm deletion.');
            return false;
        }
        
        if (!confirm(`Are you absolutely sure you want to delete the beacon "${expectedName}"? This action cannot be undone.`)) {
            e.preventDefault();
            return false;
        }
    });
    
    // Initialize lucide icons when page loads
    document.addEventListener('DOMContentLoaded', function() {
        lucide.createIcons();
    });
</script>