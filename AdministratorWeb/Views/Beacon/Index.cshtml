@model AdministratorWeb.Models.DTOs.BeaconIndexDto
@{
    ViewData["Title"] = "Bluetooth Beacons";
}

<!-- Dashboard Header -->
<div class="mb-8 animate-slide-up">
    <div class="flex items-center justify-between">
        <div>
            <h1 class="text-3xl font-bold text-white mb-2">Bluetooth Beacons</h1>
            <p class="text-slate-400 flex items-center">
                <i data-lucide="radio" class="w-4 h-4 mr-2"></i>
                Manage room tracking beacons for robot navigation
            </p>
        </div>
        <div class="flex items-center space-x-3">
            <a asp-action="Create" class="inline-flex items-center px-4 py-2 bg-gradient-to-r from-brand-600 to-indigo-600 hover:from-brand-700 hover:to-indigo-700 text-white text-sm font-medium rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl">
                <i data-lucide="plus" class="w-4 h-4 mr-2"></i>
                Add Beacon
            </a>
        </div>
    </div>
</div>

<!-- Stats Cards -->
<div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4 mb-8 animate-slide-up" style="animation-delay: 0.1s;">
    <!-- Total Beacons -->
    <div class="bg-slate-800/50 backdrop-blur-xl rounded-2xl p-4 border border-slate-700/50">
        <div class="flex items-center">
            <div class="p-2 bg-brand-500/20 rounded-xl mr-3">
                <i data-lucide="radio" class="h-4 w-4 text-brand-400"></i>
            </div>
            <div>
                <div class="text-lg font-bold text-white">@Model.TotalBeacons</div>
                <div class="text-xs text-slate-400">Total</div>
            </div>
        </div>
    </div>

    <!-- Active Beacons -->
    <div class="bg-slate-800/50 backdrop-blur-xl rounded-2xl p-4 border border-slate-700/50">
        <div class="flex items-center">
            <div class="p-2 bg-emerald-500/20 rounded-xl mr-3">
                <i data-lucide="check-circle" class="h-4 w-4 text-emerald-400"></i>
            </div>
            <div>
                <div class="text-lg font-bold text-white">@Model.ActiveBeacons</div>
                <div class="text-xs text-slate-400">Active</div>
            </div>
        </div>
    </div>

    <!-- Recently Detected -->
    <div class="bg-slate-800/50 backdrop-blur-xl rounded-2xl p-4 border border-slate-700/50">
        <div class="flex items-center">
            <div class="p-2 bg-green-500/20 rounded-xl mr-3">
                <i data-lucide="activity" class="h-4 w-4 text-green-400"></i>
            </div>
            <div>
                <div class="text-lg font-bold text-white">@Model.RecentlyDetected</div>
                <div class="text-xs text-slate-400">Recent</div>
            </div>
        </div>
    </div>

    <!-- Navigation Targets -->
    <div class="bg-slate-800/50 backdrop-blur-xl rounded-2xl p-4 border border-slate-700/50">
        <div class="flex items-center">
            <div class="p-2 bg-purple-500/20 rounded-xl mr-3">
                <i data-lucide="navigation" class="h-4 w-4 text-purple-400"></i>
            </div>
            <div>
                <div class="text-lg font-bold text-white">@Model.NavigationTargets</div>
                <div class="text-xs text-slate-400">Targets</div>
            </div>
        </div>
    </div>

    <!-- Total Rooms -->
    <div class="bg-slate-800/50 backdrop-blur-xl rounded-2xl p-4 border border-slate-700/50">
        <div class="flex items-center">
            <div class="p-2 bg-orange-500/20 rounded-xl mr-3">
                <i data-lucide="home" class="h-4 w-4 text-orange-400"></i>
            </div>
            <div>
                <div class="text-lg font-bold text-white">@Model.TotalRooms</div>
                <div class="text-xs text-slate-400">Rooms</div>
            </div>
        </div>
    </div>

    <!-- Inactive Beacons -->
    <div class="bg-slate-800/50 backdrop-blur-xl rounded-2xl p-4 border border-slate-700/50">
        <div class="flex items-center">
            <div class="p-2 bg-red-500/20 rounded-xl mr-3">
                <i data-lucide="x-circle" class="h-4 w-4 text-red-400"></i>
            </div>
            <div>
                <div class="text-lg font-bold text-white">@Model.InactiveBeacons</div>
                <div class="text-xs text-slate-400">Inactive</div>
            </div>
        </div>
    </div>
</div>

<!-- Beacons Table -->
<div class="bg-slate-800/50 backdrop-blur-xl shadow-xl overflow-hidden rounded-2xl border border-slate-700/50 animate-slide-up" style="animation-delay: 0.2s;">
    <div class="px-6 py-6 border-b border-slate-700/50">
        <div class="flex items-center justify-between">
            <div>
                <h3 class="text-xl font-bold text-white">All Beacons</h3>
                <p class="mt-1 text-sm text-slate-400 flex items-center">
                    <i data-lucide="map-pin" class="w-4 h-4 mr-2"></i>
                    Bluetooth beacons configured for room tracking
                </p>
            </div>
            <div class="flex items-center space-x-3">
                <div class="flex items-center space-x-2">
                    <select id="roomFilter" class="px-3 py-2 bg-slate-700/50 border border-slate-600/50 rounded-lg text-white text-sm">
                        <option value="">All Rooms</option>
                        @foreach (var room in Model.AvailableRooms)
                        {
                            <option value="@room">@room</option>
                        }
                    </select>
                    <select id="statusFilter" class="px-3 py-2 bg-slate-700/50 border border-slate-600/50 rounded-lg text-white text-sm">
                        <option value="">All Status</option>
                        <option value="active">Active Only</option>
                        <option value="inactive">Inactive Only</option>
                    </select>
                </div>
                <button onclick="applyFilters()" class="inline-flex items-center px-3 py-2 bg-slate-700/50 hover:bg-slate-600/50 text-white text-sm font-medium rounded-lg transition-all duration-200">
                    <i data-lucide="filter" class="w-4 h-4 mr-2"></i>
                    Filter
                </button>
            </div>
        </div>
    </div>
    
    <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-slate-700/30">
            <thead class="bg-slate-700/30">
                <tr>
                    <th class="px-6 py-4 text-left text-xs font-semibold text-slate-300 uppercase tracking-wider">Beacon</th>
                    <th class="px-6 py-4 text-left text-xs font-semibold text-slate-300 uppercase tracking-wider">Room</th>
                    <th class="px-6 py-4 text-left text-xs font-semibold text-slate-300 uppercase tracking-wider">Status</th>
                    <th class="px-6 py-4 text-left text-xs font-semibold text-slate-300 uppercase tracking-wider">RSSI Threshold</th>
                    <th class="px-6 py-4 text-left text-xs font-semibold text-slate-300 uppercase tracking-wider">Last Detection</th>
                    <th class="px-6 py-4 text-left text-xs font-semibold text-slate-300 uppercase tracking-wider">Actions</th>
                </tr>
            </thead>
            <tbody class="bg-slate-800/50 divide-y divide-slate-700/30">
                @if (Model.Beacons.Any())
                {
                    @foreach (var beacon in Model.Beacons)
                    {
                        <tr class="hover:bg-slate-700/20 transition-colors duration-200 group">
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center">
                                    <div class="flex-shrink-0">
                                        <div class="h-10 w-10 rounded-xl bg-gradient-to-br from-brand-500/20 to-indigo-500/20 flex items-center justify-center group-hover:from-brand-500/30 group-hover:to-indigo-500/30 transition-all duration-200">
                                            <i data-lucide="radio" class="h-5 w-5 text-brand-400"></i>
                                        </div>
                                    </div>
                                    <div class="ml-4">
                                        <div class="text-sm font-semibold text-white">@beacon.Name</div>
                                        <div class="text-sm text-slate-400 font-mono">@beacon.MacAddress</div>
                                        @if (beacon.IsNavigationTarget)
                                        {
                                            <div class="flex items-center mt-1">
                                                <i data-lucide="navigation" class="w-3 h-3 text-purple-400 mr-1"></i>
                                                <span class="text-xs text-purple-400">Navigation Target (Priority: @beacon.Priority)</span>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center text-sm text-slate-300">
                                    <i data-lucide="home" class="w-4 h-4 text-slate-400 mr-2"></i>
                                    @beacon.RoomName
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center space-x-2">
                                    <span class="px-3 py-1 inline-flex items-center text-xs font-semibold rounded-lg @(beacon.IsActive ? "bg-emerald-900/50 text-emerald-300 border border-emerald-700/50" : "bg-red-900/50 text-red-300 border border-red-700/50")">
                                        <i data-lucide="@(beacon.IsActive ? "check-circle" : "x-circle")" class="w-3 h-3 mr-1"></i>
                                        @beacon.StatusDescription
                                    </span>
                                    @if (beacon.IsRecentlyDetected)
                                    {
                                        <span class="px-2 py-1 inline-flex items-center text-xs font-semibold rounded-lg bg-green-900/50 text-green-300 border border-green-700/50">
                                            <i data-lucide="activity" class="w-3 h-3 mr-1"></i>
                                            Live
                                        </span>
                                    }
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center text-sm text-slate-300">
                                    <i data-lucide="signal" class="w-4 h-4 text-slate-400 mr-2"></i>
                                    @beacon.RssiThreshold dBm
                                </div>
                                @if (beacon.LastRecordedRssi.HasValue)
                                {
                                    <div class="text-xs text-slate-500">
                                        Last: @beacon.LastRecordedRssi.Value dBm
                                    </div>
                                }
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-slate-400">
                                @if (beacon.LastSeenAt.HasValue)
                                {
                                    <div class="flex items-center">
                                        <i data-lucide="clock" class="w-3 h-3 mr-2"></i>
                                        @beacon.LastSeenAt.Value.ToString("MMM dd, HH:mm")
                                    </div>
                                    @if (!string.IsNullOrEmpty(beacon.LastSeenByRobot))
                                    {
                                        <div class="text-xs text-slate-500 flex items-center mt-1">
                                            <i data-lucide="bot" class="w-3 h-3 mr-1"></i>
                                            @beacon.LastSeenByRobot
                                        </div>
                                    }
                                }
                                else
                                {
                                    <span class="text-slate-500">Never detected</span>
                                }
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                <div class="flex items-center space-x-2 opacity-0 group-hover:opacity-100 transition-opacity duration-200">
                                    <a asp-action="Edit" asp-route-id="@beacon.Id" class="inline-flex items-center px-2 py-1 bg-brand-600/20 text-brand-400 hover:bg-brand-600/30 text-xs font-medium rounded-lg transition-all duration-200 border border-brand-600/30">
                                        <i data-lucide="edit" class="w-3 h-3 mr-1"></i>
                                        Edit
                                    </a>
                                    <button onclick="toggleBeaconStatus(@beacon.Id, @beacon.IsActive.ToString().ToLower())" 
                                            class="inline-flex items-center px-2 py-1 @(beacon.IsActive ? "bg-orange-600/20 text-orange-400 hover:bg-orange-600/30 border border-orange-600/30" : "bg-emerald-600/20 text-emerald-400 hover:bg-emerald-600/30 border border-emerald-600/30") text-xs font-medium rounded-lg transition-all duration-200">
                                        <i data-lucide="@(beacon.IsActive ? "pause" : "play")" class="w-3 h-3 mr-1"></i>
                                        @(beacon.IsActive ? "Disable" : "Enable")
                                    </button>
                                    <a asp-action="Delete" asp-route-id="@beacon.Id" class="inline-flex items-center px-2 py-1 bg-red-600/20 text-red-400 hover:bg-red-600/30 text-xs font-medium rounded-lg transition-all duration-200 border border-red-600/30">
                                        <i data-lucide="trash-2" class="w-3 h-3 mr-1"></i>
                                        Delete
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="px-6 py-16 text-center">
                            <div class="w-16 h-16 bg-slate-700/50 rounded-2xl flex items-center justify-center mx-auto mb-4">
                                <i data-lucide="radio" class="h-8 w-8 text-slate-500"></i>
                            </div>
                            <h3 class="text-lg font-medium text-white mb-2">No Beacons Configured</h3>
                            <p class="text-sm text-slate-400 mb-6">Start by adding your first Bluetooth beacon for room tracking.</p>
                            <a asp-action="Create" class="inline-flex items-center px-4 py-2 bg-gradient-to-r from-brand-600 to-indigo-600 hover:from-brand-700 hover:to-indigo-700 text-white text-sm font-medium rounded-xl transition-all duration-200">
                                <i data-lucide="plus" class="w-4 h-4 mr-2"></i>
                                Add First Beacon
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    // Filter functionality
    function applyFilters() {
        const room = document.getElementById('roomFilter').value;
        const status = document.getElementById('statusFilter').value;
        
        const params = new URLSearchParams();
        if (room) params.append('room', room);
        if (status) params.append('status', status);
        
        window.location.href = '@Url.Action("Index")' + (params.toString() ? '?' + params.toString() : '');
    }

    // Toggle beacon status
    async function toggleBeaconStatus(beaconId, currentStatus) {
        try {
            const response = await fetch('@Url.Action("ToggleStatus")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('[name="__RequestVerificationToken"]').value
                },
                body: `id=${beaconId}`
            });
            
            const result = await response.json();
            if (result.success) {
                // Reload the page to show updated status
                window.location.reload();
            } else {
                alert(result.message || 'Failed to toggle beacon status');
            }
        } catch (error) {
            console.error('Error toggling beacon status:', error);
            alert('Failed to toggle beacon status');
        }
    }
    
    // Initialize lucide icons when page loads
    document.addEventListener('DOMContentLoaded', function() {
        lucide.createIcons();
    });
</script>

@Html.AntiForgeryToken()