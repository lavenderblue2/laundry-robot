@using AdministratorWeb.Models.DTOs
@{
    ViewData["Title"] = "Create User";
    var createData = (UsersCreateDto)ViewData["UsersCreateData"]!;
}

<div class="mb-8">
    <h1 class="text-2xl font-bold text-white">Create New User</h1>
    <p class="text-gray-400">Add a new user to the system</p>
</div>

<div class="bg-gray-800 shadow overflow-hidden sm:rounded-lg border border-gray-700">
    <div class="px-6 py-8">
        <form asp-action="Create" method="post" class="space-y-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label for="firstName" class="block text-sm font-medium text-gray-300 mb-2">First Name</label>
                    <input type="text" name="firstName" id="firstName" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" required />
                </div>
                
                <div>
                    <label for="lastName" class="block text-sm font-medium text-gray-300 mb-2">Last Name</label>
                    <input type="text" name="lastName" id="lastName" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" required />
                </div>
            </div>
            
            <div>
                <label for="email" class="block text-sm font-medium text-gray-300 mb-2">Email</label>
                <input type="email" name="email" id="email" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" required />
            </div>
            
            <div>
                <label for="password" class="block text-sm font-medium text-gray-300 mb-2">Password</label>
                <input type="password" name="password" id="password" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" required />
                <p class="text-gray-400 text-xs mt-1">Minimum 3 characters</p>
            </div>
            
            <div>
                <label for="role" class="block text-sm font-medium text-gray-300 mb-2">Role</label>
                <select name="role" id="role" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" required>
                    <option value="">Select a role</option>
                    @foreach (var role in createData.AvailableRoles)
                    {
                        <option value="@role">@role</option>
                    }
                </select>
            </div>
            
            <div class="flex space-x-4 pt-4">
                <button type="submit" class="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-md text-sm font-medium">
                    <i data-lucide="user-plus" class="w-4 h-4 inline mr-2"></i>
                    Create User
                </button>
                <a asp-action="Index" class="bg-gray-600 hover:bg-gray-700 text-white px-6 py-2 rounded-md text-sm font-medium inline-flex items-center">
                    <i data-lucide="arrow-left" class="w-4 h-4 inline mr-2"></i>
                    Back to Users
                </a>
            </div>
        </form>
        
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="mt-4 p-4 bg-red-900 border border-red-700 rounded-md">
                <h3 class="text-sm font-medium text-red-200">
                    There were errors with your submission
                </h3>
                <div class="mt-2 text-sm text-red-300">
                    <ul class="list-disc list-inside space-y-1">
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    </ul>
                </div>
            </div>
        }
    </div>
</div>